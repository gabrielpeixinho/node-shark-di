/** Declaration file generated by dts-gen */

export class Container {
    constructor();

    bind(paramName: any, factory: any): void;

    bindClass(paramName: any, ctor: any): void;

    get(callback: any): void;

    getBinds(): any;

    load(modules: any): void;

    resolve(factory: any): any;

    wrapInPromise(value: any): any;

}

export class Module {
    constructor();

    bind(paramName: any, factory: any): void;

    bindClass(paramName: any, ctor: any): void;

    getBinds(...args: any[]): void;

}

export namespace BootstrapContainer {
    function bind(paramName: any, factory: any): void;

    function bindClass(paramName: any, ctor: any): void;

    function get(callback: any): void;

    function getBinds(): any;

    function load(modules: any): void;

    function resolve(factory: any): any;

    function wrapInPromise(value: any): any;

    namespace module {
        const binds: {
        };

        function bind(paramName: any, factory: any): void;

        function bindClass(paramName: any, ctor: any): void;

        function getBinds(...args: any[]): void;

    }

}

